# Visualization, revisited

Now that we have some wrangling experience, we can create some more complex visualizations. This section will be mostly practice questions, promoting active learning and help-finding. 

## Facets

Facets are a way to lay out related plots in a grid. For example, maybe we want to look at hourly patterns by the day of the week.

```{r}
ggplot(nice_ride_2018, aes(x = start_hour)) +
  geom_density(adjust = 1.5) + # the adjust argument just makes the plots a little smoother
  facet_wrap(~start_day) + # lay out the plots by the weekday
  theme_minimal()
```


## Practice

* Create a plot of the ten most popular start stations for `Classic` bikes on Saturdays and Sundays.

Should look like:

```{r echo = FALSE}
nice_ride_2018 %>%
  filter(start_day %in% c("Sat", "Sun") & bike_type == "Classic") %>%
  group_by(start_station_name) %>%
  count() %>%
  arrange(desc(n)) %>%
  head(10) %>%
  ggplot(aes(x = start_station_name, y = n)) +
  geom_col() +
  theme_minimal() +
  theme(axis.text = element_text(angle = 60, hjust = 1))
```

* Create a plot of the ten most popular end stations for `Classic` bikes on the weekdays.

```{r echo = FALSE}
nice_ride_2018 %>%
  filter(!start_day %in% c("Sat", "Sun") & bike_type == "Classic") %>%
  group_by(end_station_name) %>%
  count() %>%
  arrange(desc(n)) %>%
  head(10) %>%
  ggplot(aes(x = end_station_name, y = n)) +
  geom_col() +
  theme_minimal() +
  theme(axis.text = element_text(angle = 60, hjust = 1))
```

* Create 